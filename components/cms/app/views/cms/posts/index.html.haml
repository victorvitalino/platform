.panel.panel-default
  .panel-heading
    %h4.panel-title 
      Lista de postagens
      = link_to 'Criar nova postagem', new_post_path,  data: { no_turbolink: true }, class: 'pull-right' if policy(:post, namespace: Cms).create?

  .panel-body
    .row
      .col-md-12
        .row
          = simple_form_for url_for, method: :get do |f|
            .col-md-5
              = f.input :by_title, label: "Título", input_html: { name: 'by_title', value: params[:by_title]}
            .col-md-2
              = f.input :by_category, label: "Categoria", as: :select, selected: params[:by_category], collection: Cms::PostCategory.all, include_blank: 'Todas', input_html: { name: 'by_category'}
            .col-md-2
              = f.input :by_publish, label: "Publicada?", as: :select, selected: params[:by_publish], include_blank: 'Todas', input_html: { name: 'by_publish'}
            .col-md-2
              = f.submit t(:filter_button), name: nil, class: 'btn btn-primary filter-button'
    %br/
    .row
      .col-md-12
        .table-responsive{:style => "overflow: hidden; outline: none;", :tabindex => "3"}
          %table#data-table-command.table.table-striped.table-bordered
            %thead
              %tr
                %th Nº
                %th Título
                %th Categoria da Postagem
                %th Publicado
                %th Data
                %th Ações

            %tbody
              - @posts.order('id DESC').each_with_index do |post, i|
                %tr
                  %td= post.id
                  %td= post.title
                  %td= post.post_category.title if post.post_category.present?
                  %td= status_helper (post.publish)
                  %td= post.date.strftime('%d/%m/%Y')
                  %td.col-md-1
                    = link_to '', edit_post_path(post),title: 'Editar', class: 'glyphicon glyphicon-pencil btn btn-primary btn-xs', data: {turbolinks: false} if policy(:post, namespace: Cms).update?
                    = link_to '', post,title: 'Remover', :method => :delete, class: 'glyphicon glyphicon-remove btn btn-danger btn-xs', :data => { :confirm => t(:confirm) } if policy(:post, namespace: Cms).destroy?
    .row
      .col-md-12.paginate
        = will_paginate @posts, renderer: BootstrapPagination::Rails