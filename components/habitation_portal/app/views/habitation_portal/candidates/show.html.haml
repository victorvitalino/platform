= javascript_include_tag "https://www.google.com/jsapi", "chartkick"
= javascript_include_tag "http://code.highcharts.com/highcharts.js"
:css
  .table {
    font-size: 14px !important;
  }

  .table th, td {
    padding: 6 !important;
    vertical-align: baseline !important;
  }

.container
  .row.box
    .col-md-12
      .box_internal
        .col-md-12
          .row
            .col-md-12
              %h1
                %b Detalhamento do Candidato
              %h4
                = link_to "Ir para listas", url_for('/pagina/43')
                |
                = link_to "Pesquisar CPF", find_candidate_path
          %hr/
          .row
            .col-md-12
              %h3
                %b Situação do candidato
          .row
            .col-md-12
              %table#data-table-command.table.table-striped.table-vmiddle.datatable
                %thead
                  %tr
                    %th Situação do Candidato
                    %th Programa
                    %th Faixa
                    %th Lista
                    %th Posição
                    %th Última pontuação
                %tbody
                  - if @candidate.list.present?
                    - @candidate.list.each do |list|
                      %tr
                        %td
                          - if @candidate.current_situation_status == 'ok'
                            %span.label.label-success
                              = @candidate.current_situation_name
                          - if @candidate.current_situation_status == 'pendente'
                            %span.label.label-warning
                              PENDENTE - #{@candidate.current_situation_name}
                          - if @candidate.current_situation_status == 'cinza'
                            %span.label.label-default
                              PENDENTE - #{@candidate.current_situation_name}

                        %td= program(@candidate.program_id)
                        %td= list[1][0]
                        %td= translate_list(list[0])
                        %td= "#{list[2]}º"
                        %td= @candidate.pontuations.last.total if @candidate.pontuations.present?

                  - else
                    %tr
                      %td= @candidate.current_situation_name
                      %td= program(@candidate.program_id)
                      %td
                      %td
                      %td
                      %td= @candidate.pontuations.last.total if @candidate.pontuations.present?
          -if @candidate.old_candidates.present? && @candidate.program_id == 2
            .row
              .col-md-12
                %table#data-table-command.table.table-striped.table-vmiddle.datatable
                  %thead
                    %tr
                      %th Nome Fantasia
                      %th Nome
                  %tbody
                    %tr
                      %td= @candidate.old_candidates.last.old.fantasy_name
                      %td= @candidate.old_candidates.last.old.name
                  %thead
                    %tr
                      %th CNPJ
                      %th Presidente
                  %tbody
                    %tr
                      %td= @candidate.old_candidates.last.old.cnpj
                      %td= @candidate.old_candidates.last.old.president_name
          %hr/
          .row
            .col-md-12
              %h3
                %b Histórico de situação
          .row
            .col-md-12
              - if @candidate.cadastre_situations.present?
                %table#data-table-command.table.table-striped.table-vmiddle.datatable
                  %thead
                    %tr
                      %th Situação
                      %th Data da situação
                  %tbody
                    - @candidate.cadastre_situations.order('id ASC').each do |candidate|
                      %tr
                        %td= candidate.situation_status.name.upcase if candidate.situation_status.present?
                        %td
                          - unless %w(2016-01-05 2016-01-15 2016-01-18).include? candidate.created_at.strftime('%Y-%m-%d').to_s
                            = candidate.created_at.strftime('%d/%m/%Y')
                          - else
                            Informação não disponível
              - else
                Informação não disponível
          %hr/
          .row
            .col-md-12
              %h3
                %b Indicado ao empreendimento
          .row
            .col-md-12
              - if @candidate.enterprise_cadastres.present?
                %table#data-table-command.table.table-striped.table-vmiddle.datatable
                  %thead
                    %tr
                      %th Empreendimento
                      %th Data de encaminhamento
                      %th{colspan: 6} Situação
                  %tbody
                    - @inactives = @candidate.enterprise_cadastres.where(inactive: true).order('inactive_date ASC')
                    - @candidate.enterprise_cadastres.order('created_at ASC').each_with_index do |enterprise, index|
                      %tr
                        %td= link_to enterprise.enterprise.name, enterprise_cadastre_situation_candidates_path(id:enterprise.id), remote: true if enterprise.enterprise.present?
                        %td= enterprise.created_at.strftime("%d/%m/%Y")
                        %td{colspan: 6}= enterprise.inactive ? "Indicação inativa: #{enterprise.inactive_date.present? ? enterprise.inactive_date.strftime("%d/%m/%Y") : 'Sem informação de data.' }" :  "Indicação ativa"
                  %tfooter
                    - if @inactives.present? && @inactives.first.inactive_date.present?
                      %tr
                        %th Quantidade de recusas
                        %td= @inactives.count
                        %th Primeira recusa
                        %td
                          = @inactives.first.inactive_date.present? ? @inactives.first.inactive_date.strftime('%d/%m/%Y') : "Sem informação"
                        %th Prazo final
                        %td
                          - @year  = @inactives.first.inactive_date + 4.years
                          = @year.strftime("%d/%m/%Y")
                        %th Tempo restante
                        %td
                          - if @year > Date.today
                            - @month = ((Date.today.year - 1) * 12 + Date.today.month) - ((@year.year - 1) * 12 + @year.month)
                            - case @month.divmod(12)[0]
                              - when -4
                                %span.label.label-success
                                  Faltam #{(@month.divmod(12)[0] + 1) * -1} ano(s) e #{12 - @month.divmod(12)[1]} mes(es)
                              - when -3
                                %span.label.label-warning
                                  Faltam #{(@month.divmod(12)[0] + 1) * -1} ano(s) e #{12 -@month.divmod(12)[1]} mes(es)
                              - when -2
                                %span.label.label-danger
                                  Faltam #{(@month.divmod(12)[0] + 1) * -1} ano(s) e #{12 -@month.divmod(12)[1]} mes(es)
                              - when -1
                                %span.label.label-inverse
                                  Faltam #{(@month.divmod(12)[0] + 1) * -1} ano(s) e #{12 -@month.divmod(12)[1]} mes(es)
                              - when 0
                                %span.label.label-inverse
                                  Faltam poucos dias para exceder o prazo
                          - else
                            %span.label.label-inverse
                              Prazo excedido


              - else
                Informação não disponível
          %hr/
          .row
            .col-md-12
              %h3
                %b Dados da contemplação
          .row
            .col-md-12
              - if @candidate.cadastre_address.present? && @candidate.cadastre_address.where(situation_id: 1).last
                - @address = @candidate.cadastre_address.last
                %table#data-table-command.table.table-striped.table-vmiddle.datatable
                  %thead
                    %tr
                      %th Cidade
                      %th Quadra
                      %th Conjunto
                      %th Situação
                      %th Data
                  %tbody
                    %tr
                      %td= @address.unit.city.name if @address.unit.city.present?
                      %td= @address.unit.block if @address.unit.present?
                      %td= @address.unit.group if @address.unit.present?
                      %td= @address.unit.situation_unit.description if @address.unit.present?
                      %td= @address.created_at.strftime("%d/%m/%Y")

              - else
                Informação não disponível
          %hr/
          .row
            .col-md-12
              %h3
                %b Dados Pessoais
          .row
            .col-md-12
              %table#data-table-command.table.table-striped.table-vmiddle.datatable
                %thead
                  %tr
                    %th{colspan: 3} Nome Completo
                    %th CPF
                    %th Sexo
                    %th Estado Civil
                %tbody
                  %tr
                    %td{colspan: 3}= @candidate.name
                    %td= @candidate.cpf.format_obfuscator_cpf
                    %td= @candidate.gender
                    %td= @candidate.civil_state.name if @candidate.civil_state.present?
                %thead
                  %tr
                    %th Chegada ao DF
                    %th Naturalidade
                    %th Condição Especial
                    %th CID?
                    %th NIS
                %tbody
                  %tr
                    %td.col-md-2= @candidate.arrival_df.strftime('%d/%m/%Y') if @candidate.arrival_df.present?
                    %td.col-md-2= "#{@candidate.place_birth} #{@candidate.born_uf}"
                    %td.col-md-2= @candidate.special_condition.name if @candidate.special_condition.present?
                    %td.col-md-2= @candidate.cid.present? ? "Sim" : "Não"
                    %td.col-md-2= @candidate.nis.present? ? "Possui NIS" : "Não possui NIS"

          %hr/
          .row
            .col-md-12
              %h3
                %b Evolução na Lista
            .col-md-12{style: 'text-align: center'}
              #accordion.panel-group{"aria-multiselectable" => "true", :role => "tablist"}
                #heading1.panel-heading{:role => "tab"}
                  %a.collapsed{"aria-controls" => "collapse", "aria-expanded" => "false", "data-parent" => "#accordion", "data-toggle" => "collapse", :href => "#collapse", :role => "button"} Visualizar evolução
                #collapse.panel-collapse.collapse{"aria-labelledby" => "heading", :role => "tabpanel"}
                  .panel-body
                    #container_zueira
          %hr/
          .row
            .col-md-12
              %h3
                %b Pontuações
              = link_to "Como funciona a pontuação?"
            .col-md-12{style: 'text-align: center'}
              #accordion2.panel-group{"aria-multiselectable" => "true", :role => "tablist"}
                #heading2.panel-heading{:role => "tab"}
                  %a.collapsed{"aria-controls" => "collapse", "aria-expanded" => "false", "data-parent" => "#accordion2", "data-toggle" => "collapse", :href => "#collapse2", :role => "button"} Visualizar pontuação
                #collapse2.panel-collapse.collapse{"aria-labelledby" => "heading", :role => "tabpanel"}
                  .panel-body
                    %h4
                      %i Linha temporal de Pontuação
                    = area_chart @candidate.pontuations.map {|key| [Date.parse(key.code.to_s).strftime('%Y-%m-%d'), key.total]}, {library: {width: 1080}}
            .col-md-12{style: 'text-align: center'}
              %hr/
              %h4
                %i Detalhamento
              %table.table.table-vmiddle.datatable
                %thead
                  %tr
                    %th Data
                    %th Posição
                    %th Renda Familiar
                    %th Tempo de Brasília
                    %th Dependentes
                    %th Condição Especial
                    %th Tempo de Lista
                    %th Total
                %tbody
                  - @candidate.pontuations.order('code DESC').each_with_index do |pontuation, index|
                    %tr{style: 'background-color: #F1F1F1'}
                      %td
                        %h4
                          %span.label.label-success
                            %b= pontuation.year.strftime('%d/%m/%Y')
                      %td
                        %b= "#{pontuation.position} º"
                      - @last_point = pontuation.position
                      %td= pontuation.income
                      %td.col-md-2= pontuation.bsb
                      %td.col-md-2= pontuation.dependent
                      %td.col-md-2= pontuation.special_condition
                      %td.col-md-2= pontuation.timelist
                      %td= pontuation.total
                    - if pontuation.cadastre_mirror.present?
                      %tr.pontuation{id: "id#{pontuation.id}"}
                        %td{colspan: 2}
                          %h5= link_to "Critérios #{pontuation.year.strftime('%Y')}", portal.page_path(48)
                        %td
                          %h5= number_to_currency pontuation.cadastre_mirror.income
                        %td
                          %h5= "#{pontuation.cadastre_mirror.arrival_df_time(pontuation.year)} Ano(s)"
                        %td{style: 'padding-top: 13px'}
                          - pontuation.cadastre_mirror.dependent_mirrors.each do |dependent|
                            %span{title: "#{dependent.special?}"}
                              - if dependent.special_condition_id != 1
                                .label.label-primary{style: 'margin: 1px'}
                                  %i{class: 'fa fa-wheelchair'}
                              - else
                                - if dependent.masculino?
                                  .label.label-success{style: 'margin: 1px'}
                                    %i{class: 'fa fa-male'}
                                - if dependent.feminino?
                                  .label.label-pink{style: 'margin: 1px'}
                                    %i{class: 'fa fa-female'}
                        %td
                          %h6= pontuation.cadastre_mirror.special_condition.name if pontuation.cadastre_mirror.special_condition.present?
                        %td
                          %h6= "#{pontuation.cadastre_mirror.timelist_time(pontuation.year)} Ano(s)"
                      %tr
                        %td{colspan: 7, style: 'background-color: white'}

          %hr/
          .row
            .col-md-12
              %h2
                %b Atendimentos & Agendamentos
          .row
            .col-md-12
              %table#data-table-command.table.table-striped.table-vmiddle.datatable
                %thead
                  %tr
                    %th Status
                    %th Convocação
                    %th Observação
                    %th Data
                %tbody
                  - @candidate.attendances.order(:created_at).each do |attendance|
                    - unless attendance.attendance_status_id == 99
                      %tr
                        %td= (attendance.attendance_status.present?) ? attendance.attendance_status.name  : 'Informação não disponível'
                        %td= (attendance.convocation.present?) ? attendance.convocation.description  : 'Informação não disponível'
                        %td= (attendance.observation.present?) ? attendance.observation : 'Informação não disponível'
                        %td= attendance.created_at.strftime('%d/%m/%Y às %H:%M')
          .row
        .row
:javascript
jQuery(document).ready(function(){

  $(function () {
      var url_json = "http://"+ URL +"/habitacao/candidato/#{@candidate.cpf}/detalhe.json?program_id=";
        function get_json(y, listagem){
          var listas = listagem;
          $.getJSON(url_json+y, function (data) {

                  if(data.length > 0){
                      var ex = [];
                      var lists_data = [];
                      $.each(data,function(index){
                          ex.push([Date.UTC(data[index][1][0],data[index][1][1]-1,data[index][1][2]),data[index][0],data[index][2]]);
                          lists_data.push(data[index][2]);
                      });
                      $('.container_grafico_'+y).highcharts({

                          chart: {
                              zoomType: 'x',
                              width: 1080
                          },
                          title: {
                              text:listas[y]
                          },
                          subtitle: {
                              text: document.ontouchstart === undefined ?
                                      'Click and drag in the plot area to zoom in' : 'Pinch the chart to zoom in'
                          },
                          xAxis: {
                              format: '{value:%Y-%m-%d}',
                              type: 'datetime'
                          },
                          yAxis: {
                              title: {
                                  text: 'Posição'
                              },
                              reversed: true
                          },
                          legend: {
                              enabled: true
                          },
                          plotOptions: {area: {
                                  fillColor: {
                                      linearGradient: {
                                          x1: 0,
                                          y1: 0,
                                          x2: 0,
                                          y2: 2
                                      },
                                      stops: [
                                          [0, Highcharts.getOptions().colors[0]],
                                          [1, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0).get('rgba')]
                                      ]
                                  },
                                  marker: {
                                      radius: 0
                                  },
                                  lineWidth: 1,
                                  states: {
                                      hover: {
                                          lineWidth: 1
                                      }
                                  },
                                  threshold: null
                              },

                          },
                          series: [{
                              type: 'line',
                              name: 'Posição',
                              data:ex
                          }],
                          tooltip: {
                            useHTML: true,
                            formatter: function() {
                            var serie = this.series;
                            var datas = "/habitacao/candidato/#{@candidate.cpf}/detalhe?date=" + Highcharts.dateFormat('%Y-%m-%d', this.x);
                            var s = '<b>' + Highcharts.dateFormat('%d/%m/%Y', this.x) + '</b><br>';
                            s += '<span style="color:' + serie.color + '">' + serie.options.name + '</span>: <b>' + this.y + '</b><br/>';
                            s += '<a data-remote="true" href="'+ datas +'">' + "Detalhes do dia na lista " + listas[y] + '</a>'
                            return s;
                            }
                        }
                      });

                    }
          });
      }
        var listass = ["GENERICA","RII","RIE","REGULARIZAÇÃO","VULNERAVEIS","DEFICIENTE","CADASTRO ANTIGO","IDOSOS"];
        for (x = 1; x <= 7;x++){
            get_json(x , listass);
            $("<div class='container_grafico_"+ x +"'></div>").appendTo('#container_zueira');
          }
            $( ".panel-body" ).each(function( index ) {
              console.log( index + ": " + $( this ).children().length);
              });
  });
$('.collapse').collapse(
  toogle:false
)
});
