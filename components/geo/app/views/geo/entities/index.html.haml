:css
  #map {
    width: 100%;
    height: 600px;
  }

%h1 
  %b Geolocalização Entidades
%br/
%br/
#map

:javascript 
  var geocoder; 
  var map; 

  function initialize() {
    geocoder = new google.maps.Geocoder();
    var latlng = new google.maps.LatLng(-15.8091397,-47.8781489);
    var myOptions = {
      zoom: 10,
      center: latlng,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    }
    map = new google.maps.Map(document.getElementById("map"), myOptions);
    
    $.getJSON("#{geo.entities_path}.json", function(data) {
      for(var i = 0; i < data.length; i++) {
        codeAddress(data[i].cep, data[i])
      }
    });

  }

  function codeAddress(zipCode, data) {
      country = "Brasilia - Federal District"
      zipCode = zipCode.substring(0, 5)
      
      geocoder.geocode({ 
        componentRestrictions: {
          country: 'BR',
        },
        'address': zipCode
        },
        function(results, status) {
          
          if (status == google.maps.GeocoderStatus.OK) {
            var marker = new google.maps.Marker({
                map: map,
                position: results[0].geometry.location
            });

          var complete_recadastre = "Não completou"

          $.getJSON("#{geo.entities_path}/situacao_nova?" + data.cnpj, function(data) {
            if(data != null) {
              complete_recadastre = "Recadastro realizado"
            }
          });

          var contentString = "" 
          + "<p><h1><b>"+data.fantasy_name+"</b></h1><p/>"
          + "<p>"+data.name+"</p>"
          + "<hr/>"
          + "<p><b>CNPJ:</b><br/>"+data.cnpj+"</p>"
          + "<p><b>Completou Recadastramento:</b><br/> "+ complete_recadastre +"</p>"
          + "<p><b>Situação Anterior:</b><br/> Credenciada</p>"
          + "<hr />"
          + "<p><b>Endereço:</b><br/> "+data.address+"</p>"
          + "<p><b>Cidade:</b><br/> "+data.city+"</p>"
          + "<p><b>CEP:</b><br/> "+data.cep+"</p>"

          var infowindow = new google.maps.InfoWindow({
            content: contentString
          });

          marker.addListener('click', function() {
            infowindow.open(map, marker);
          });

        } else if (status === google.maps.GeocoderStatus.OVER_QUERY_LIMIT) {    
            setTimeout(function() {
              codeAddress(zipCode, data);
            }, 100);
        } else {
            console.log("Geocode was not successful for the following reason:" 
                  + status);
        }
      });
    }