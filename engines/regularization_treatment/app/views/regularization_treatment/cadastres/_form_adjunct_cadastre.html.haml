.row
  .col-md-12
    = f.label :name, class: 'fg-label'
    = f.input :name, label: false
.row
  .col-md-12
    = f.label :civil_state, class: 'fg-label'
    = f.association :civil_state, label: false, prompt: 'selecione...'
.row
  .col-md-4
    .checkbox.m-b-15
      %label
        = f.check_box :flag_special_condition
        %i.input-helper
        = f.label :flag_special_condition, class: 'fg-label'
  .col-md-4
    = f.label :special_condition, class: 'fg-label'
    = f.association :special_condition, label: false, prompt: 'selecione...'
  .col-md-4
    = f.label :cid, class: 'fg-label'
    = f.input :cid, label: false
.row
  .col-md-3
    = f.label :state, class: 'fg-label'
    = f.input :state, label:false, as: :select, collection: Address::State.all, prompt: 'selecione a cidade...'
  .col-md-3
    = f.label :city, class: 'fg-label'
    = f.input :city, label: false, as: :select, collection: (@cadastre.adjunct_cadastre.state.present?) ? Address::City.select(:city).where(state_id: @cadastre.adjunct_cadastre.state) : {}, label_method: :block, value_method: :block, prompt: 'selecione a cidade...', input_html: { value:  @cadastre.adjunct_cadastre.state}
  .col-md-3
    = f.label :cep, class: 'fg-label'
    = f.input :cep, label: false
.row
  .col-md-12
    = f.label :address, class: 'fg-label'
    = f.input :address, label: false
.row
  .col-md-8
    = f.label :adjunct_address, class: 'fg-label'
    = f.input :adjunct_address, label: false
  .col-md-2
    = f.label :number_address, class: 'fg-label'
    = f.input :number_address, label: false
.row
  .col-md-6
    = f.label :income, class: 'fg-label'
    = f.input :income, label: false
  .col-md-6
    = f.label :nis, class: 'fg-label'
    = f.input :nis, label: false
.row
  .col-md-3
    = f.label :telephone, class: 'fg-label'
    = f.input :telephone, label: false
  .col-md-3
    = f.label :telephone_optional, class: 'fg-label'
    = f.input :telephone_optional, label: false
  .col-md-3
    = f.label :celphone, class: 'fg-label'
    = f.input :celphone, label: false
.row
  .col-md-12
    = f.label :email, class: 'fg-label'
    = f.input :email, label: false
.row
  .col-md-12
    = f.label :work, class: 'fg-label'
    = f.input :work, label: false
.row
  .col-md-3
    = f.label :state, class: 'fg-label'
    = f.association :state, label: false, prompt: 'selecione...'
  .col-md-3
    = f.label :city, class: 'fg-label'
    = f.association :city, label: false, prompt: 'selecione...'
  .col-md-3
    = f.label :cep_work, class: 'fg-label'
    = f.input :cep_work, label: false
.row
  .col-md-12
    = f.label :address_work, class: 'fg-label'
    = f.input :address_work, label: false
.row
  .col-md-8
    = f.label :adjunct_address_work, class: 'fg-label'
    = f.input :adjunct_address_work, label: false
  .col-md-2
    = f.label :number_address_work, class: 'fg-label'
    = f.input :number_address_work, label: false

:javascript

  $(document).ready(function() {

    $("#cadastre_adjunct_cadastre_attributes_state").on('change', function(){

      $.getJSON("#{address.cities_path}?state_id=" + $(this).val(), function(data) {

        html = "<option value>selecione...</option>"
        if(data.length > 0) {
          console.log(data)
          for(var i = 0; i < data.length; i++) {
            html += "<option value='"+data[i].block+"'>"+data[i].block+"</option>"
          }

        } else {
          html = "<option value>NÃ£o foram encontradas cidades</option>"
        }
        $("#cadastre_adjunct_cadastre_attributes_city").html(html);
      });
     });


